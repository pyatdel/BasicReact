Vite로 React 프로젝트 생성 및 설정
bash


# 프로젝트 생성
npm create vite@latest my-react-app
# 이후 React와 JavaScript/TypeScript 선택

# 생성된 프로젝트 폴더로 이동
cd my-react-app

# 의존성 패키지 설치
npm install

# 개발 서버 실행
npm run dev
자주 사용하는 컴포넌트 생성 단축키 (VS Code)
rfce: React Function Component Export
jsx


// Example.jsx
import React from 'react'

function Example() {
  return (
    <div>Example</div>
  )
}

export default Example
rac: React Arrow Component
jsx


// Example.jsx
import React from 'react'

export const Example = () => {
  return (
    <div>Example</div>
  )
}
실습 예제로 배우는 React 기초
jsx


// UserProfile.jsx
import React from 'react'

function UserProfile({ name, age, hobby }) {
  return (
    <div className="profile">
      <h2>{name}</h2>
      <p>나이: {age}</p>
      <p>취미: {hobby}</p>
    </div>
  )
}

// App.jsx에서 사용
function App() {
  return (
    <div>
      <UserProfile 
        name="홍길동" 
        age={25} 
        hobby="독서" 
      />
    </div>
  )
}
주요 React 속성(Props) 및 개념
jsx


// 1. 기본적인 props 전달
<Button text="클릭하세요" />

// 2. 이벤트 핸들링
<button onClick={() => alert('클릭됨')}>클릭</button>

// 3. 조건부 렌더링
{isLoggedIn ? <UserProfile /> : <LoginButton />}

// 4. 리스트 렌더링
{items.map(item => (
  <Item key={item.id} {...item} />
))}

// 5. State 사용
import { useState } from 'react'

function Counter() {
  const [count, setCount] = useState(0)
  
  return (
    <div>
      <p>카운트: {count}</p>
      <button onClick={() => setCount(count + 1)}>
        증가
      </button>
    </div>
  )
}
간단한 프로젝트 예제: ToDo 리스트
jsx


import { useState } from 'react'

function TodoList() {
  const [todos, setTodos] = useState([])
  const [input, setInput] = useState('')

  const addTodo = () => {
    if (input.trim()) {
      setTodos([...todos, { id: Date.now(), text: input }])
      setInput('')
    }
  }

  return (
    <div>
      <input 
        value={input}
        onChange={(e) => setInput(e.target.value)}
        placeholder="할 일을 입력하세요"
      />
      <button onClick={addTodo}>추가</button>
      
      <ul>
        {todos.map(todo => (
          <li key={todo.id}>{todo.text}</li>
        ))}
      </ul>
    </div>
  )
}